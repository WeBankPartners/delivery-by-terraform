{
	"info": {
		"_postman_id": "9e71e6d2-9514-4c7f-9fe1-0136bd57eba2",
		"name": "040_service_mgmt_init",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9c21754-dc6e-48af-ba46-ebff205a11a2",
						"exec": [
							"pm.test(\"login\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"OK\");",
							"    pm.environment.set(\"authorization\", postman.getResponseHeader(\"Authorization\"));",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "Origin",
						"value": "http://111.230.161.237:29090"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
					},
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
				},
				"url": {
					"raw": "http://{{domain}}/auth/v1/api/login",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"auth",
						"v1",
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "list_service-catalogues",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5331447a-c6ad-4363-ba6d-2c3df1330cc4",
						"exec": [
							"pm.test(\"list service catalogues\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"OK\");",
							"});",
							"",
							"postman.setNextRequest(\"list_process-definition-keys\");",
							"",
							"var map=new Map();",
							"var rt = pm.response.json();",
							"for(var i=0;i<rt.data.length;i++){",
							"    map.set(rt.data[i].name, rt.data[i].id);",
							"}",
							"",
							"//console.log(map);",
							"var cl_name = pm.iterationData.get(\"cl_name\");",
							"//console.log(cl_name);",
							"if(!map.has(cl_name)){",
							"    console.log(\"catalog name is not existed.(\"+cl_name+\")\");",
							"    //create service catalogue",
							"    pm.sendRequest({",
							"        url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/service-catalogues\" ,",
							"        method: 'POST',",
							"        ",
							"        body:{",
							"            mode: 'raw',",
							"            raw: JSON.stringify({\"name\":pm.iterationData.get(\"cl_name\"),\"description\":pm.iterationData.get(\"cl_desc\")})",
							"        },",
							"        header: {",
							"            'Accept': 'application/json',",
							"            'Content-Type': 'application/json;charset=UTF-8',",
							"            'authorization': pm.environment.get(\"authorization\"),",
							"        }",
							"    }, function (err, res) {",
							"        pm.sendRequest({",
							"            url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/service-catalogues/available\" ,",
							"            method: 'GET',",
							"            header: {",
							"                'Accept': 'application/json',",
							"                'Content-Type': 'application/json;charset=UTF-8',",
							"                'authorization': pm.environment.get(\"authorization\"),",
							"            }",
							"        }, function (err, res) {",
							"            map.clear();",
							"            var rt = res.json();",
							"            for(var i=0;i<rt.data.length;i++){",
							"                map.set(rt.data[i].name, rt.data[i].id);",
							"            }",
							"            //console.log(map)",
							"            //console.log(\"catalog id (\"+cl_name+\"):\"+map.get(cl_name));",
							"            pm.collectionVariables.set(\"sm_servie_catalogue_id\", map.get(cl_name));",
							"            postman.setNextRequest(\"list_service_pipelines\");",
							"        });            ",
							"    });",
							"    ",
							"}else{",
							"    //console.log(map)",
							"    //console.log(\"catalog id (\"+cl_name+\"):\"+map.get(cl_name));",
							"    pm.collectionVariables.set(\"sm_servie_catalogue_id\", map.get(cl_name));",
							"    postman.setNextRequest(\"list_service_pipelines\");",
							"    ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "accept-language",
						"value": "en,zh-CN;q=0.9,zh;q=0.8"
					},
					{
						"key": "authorization",
						"value": "{{authorization}}"
					},
					{
						"key": "cookie",
						"value": "JSESSIONID=C1D79BA09EA69F07B0A2D0619D558ACC; DokuWiki=5d2b2ea77997ce7cee2a7765004242aa; DW68700bfd16c2027de7de74a5a8202a6f=Z3JheQ%3D%3D%7C1%7Csu%2F1dHAKO8iuiDLvyEESlg8lAO3SfH8CXKDut%2B3yZ64%3D"
					},
					{
						"key": "host",
						"value": "120.79.2.48:29090"
					},
					{
						"key": "proxy-connection",
						"value": "keep-alive"
					},
					{
						"key": "referer",
						"value": "http://120.79.2.48:29090/"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
					}
				],
				"url": {
					"raw": "http://{{domain}}/service-mgmt/v1/service-catalogues/available",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"service-mgmt",
						"v1",
						"service-catalogues",
						"available"
					]
				}
			},
			"response": []
		},
		{
			"name": "list_service_pipelines",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2a763dd-b354-4e1e-99cd-cd25224d6ca3",
						"exec": [
							"pm.test(\"list service pipelines\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"OK\");",
							"});",
							"",
							"",
							"var map=new Map();",
							"var rt = pm.response.json();",
							"for(var i=0;i<rt.data.length;i++){",
							"    map.set(rt.data[i].name, rt.data[i].id);",
							"}",
							"",
							"//console.log(map);",
							"var pl_name = pm.iterationData.get(\"pl_name\");",
							"//console.log(pl_name);",
							"if(!map.has(pl_name)){",
							"    //console.log(\"pipeline name is not existed.(\"+pl_name+\")\");",
							"    //create service catalogue",
							"    pm.sendRequest({",
							"        url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/service-pipelines\" ,",
							"        method: 'POST',",
							"        ",
							"        body:{",
							"            mode: 'raw',",
							"            raw: JSON.stringify(",
							"                {\"name\":pm.iterationData.get(\"pl_name\"),\"description\":pm.iterationData.get(\"pl_desc\"),\"ownerRole\":pm.iterationData.get(\"pl_ownerRole\"),\"serviceCatalogueId\":pm.collectionVariables.get(\"sm_servie_catalogue_id\")})",
							"        },",
							"        header: {",
							"            'Accept': 'application/json',",
							"            'Content-Type': 'application/json;charset=UTF-8',",
							"            'authorization': pm.environment.get(\"authorization\"),",
							"        }",
							"    }, function (err, res) {",
							"        pm.sendRequest({",
							"            url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/service-pipelines/service-catalogues/\"+pm.collectionVariables.get(\"sm_servie_catalogue_id\") ,",
							"            method: 'GET',",
							"            header: {",
							"                'Accept': 'application/json',",
							"                'Content-Type': 'application/json;charset=UTF-8',",
							"                'authorization': pm.environment.get(\"authorization\"),",
							"            }",
							"        }, function (err, res) {",
							"            map.clear();",
							"            var rt = res.json();",
							"            for(var i=0;i<rt.data.length;i++){",
							"                map.set(rt.data[i].name, rt.data[i].id);",
							"            }",
							"            ",
							"            //console.log(map)",
							"            //console.log(\"catalog id (\"+pl_name+\"):\"+map.get(pl_name));",
							"            pm.collectionVariables.set(\"sm_service_pipeline_id\", map.get(pl_name));",
							"            postman.setNextRequest(\"list_service_request_templ\");",
							"            ",
							"        });            ",
							"    });",
							"    ",
							"}else{",
							"    //console.log(map)",
							"    //console.log(\"catalog id (\"+pl_name+\"):\"+map.get(pl_name));",
							"    pm.collectionVariables.set(\"sm_service_pipeline_id\", map.get(pl_name));",
							"    postman.setNextRequest(\"list_service_request_templ\");",
							"    ",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "accept-language",
						"value": "en,zh-CN;q=0.9,zh;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTU4MjcwODc1MCwidHlwZSI6ImFjY2Vzc1Rva2VuIiwiY2xpZW50VHlwZSI6IlVTRVIiLCJleHAiOjE1ODI3MDkzNTAsImF1dGhvcml0eSI6IltTVVBFUl9BRE1JTixJTVBMRU1FTlRBVElPTl9XT1JLRkxPV19FWEVDVVRJT04sSU1QTEVNRU5UQVRJT05fQkFUQ0hfRVhFQ1VUSU9OLElNUExFTUVOVEFUSU9OX0FSVElGQUNUX01BTkFHRU1FTlQsTU9OSVRPUl9NQUlOX0RBU0hCT0FSRCxNT05JVE9SX01FVFJJQ19DT05GSUcsTU9OSVRPUl9DVVNUT01fREFTSEJPQVJELE1PTklUT1JfQUxBUk1fQ09ORklHLE1PTklUT1JfQUxBUk1fTUFOQUdFTUVOVCxDT0xMQUJPUkFUSU9OX1BMVUdJTl9NQU5BR0VNRU5ULENPTExBQk9SQVRJT05fV09SS0ZMT1dfT1JDSEVTVFJBVElPTixBRE1JTl9TWVNURU1fUEFSQU1TLEFETUlOX1JFU09VUkNFU19NQU5BR0VNRU5ULEFETUlOX1VTRVJfUk9MRV9NQU5BR0VNRU5ULEFETUlOX0NNREJfTU9ERUxfTUFOQUdFTUVOVCxDTURCX0FETUlOX0JBU0VfREFUQV9NQU5BR0VNRU5ULEFETUlOX1FVRVJZX0xPRyxNRU5VX0FETUlOX1BFUk1JU1NJT05fTUFOQUdFTUVOVCxNRU5VX0RFU0lHTklOR19DSV9EQVRBX0VOUVVJUlksTUVOVV9ERVNJR05JTkdfQ0lfSU5URUdSQVRFRF9RVUVSWV9FWEVDVVRJT04sTUVOVV9JRENfUExBTk5JTkdfREVTSUdOLE1FTlVfREVTSUdOSU5HX0NJX0lOVEVHUkFURURfUVVFUllfTUFOQUdFTUVOVCxNRU5VX0RFU0lHTklOR19DSV9EQVRBX01BTkFHRU1FTlQsTUVOVV9BUFBMSUNBVElPTl9BUkNISVRFQ1RVUkVfREVTSUdOLE1FTlVfQVBQTElDQVRJT05fREVQTE9ZTUVOVF9ERVNJR04sTUVOVV9DTURCX0RFU0lHTklOR19FTlVNX01BTkFHRU1FTlQsTUVOVV9DTURCX0FETUlOX0JBU0VfREFUQV9NQU5BR0VNRU5ULE1FTlVfQ01EQl9ERVNJR05JTkdfRU5VTV9FTlFVSVJZLE1FTlVfQURNSU5fQ01EQl9NT0RFTF9NQU5BR0VNRU5ULE1FTlVfQURNSU5fUVVFUllfTE9HLE1FTlVfSURDX1JFU09VUkNFX1BMQU5OSU5HLEpPQlNfVEFTS19NQU5BR0VNRU5ULEpPQlNfU0VSVklDRV9DQVRBTE9HX01BTkFHRU1FTlRdIn0.BK6pXaHzs6vNwI85KEH84GKzMxaZcAr7M4uGVDTO4R1fjnYCsB4W1WK766LXM1U1xWBgOQs4Z3WpHWphqib7_w"
					},
					{
						"key": "cookie",
						"value": "JSESSIONID=1C3C48E7D67CE86536051D3CB037BDFB; DokuWiki=5d2b2ea77997ce7cee2a7765004242aa; DW68700bfd16c2027de7de74a5a8202a6f=Z3JheQ%3D%3D%7C1%7Csu%2F1dHAKO8iuiDLvyEESlg8lAO3SfH8CXKDut%2B3yZ64%3D"
					},
					{
						"key": "host",
						"value": "120.79.2.48:29090"
					},
					{
						"key": "proxy-connection",
						"value": "keep-alive"
					},
					{
						"key": "referer",
						"value": "http://120.79.2.48:29090/"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
					}
				],
				"url": {
					"raw": "http://{{domain}}/service-mgmt/v1/service-pipelines/service-catalogues/{{sm_servie_catalogue_id}}",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"service-mgmt",
						"v1",
						"service-pipelines",
						"service-catalogues",
						"{{sm_servie_catalogue_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list_service_request_templ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2a763dd-b354-4e1e-99cd-cd25224d6ca3",
						"exec": [
							"pm.test(\"list service pipelines\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"OK\");",
							"});",
							"",
							"var map=new Map();",
							"var rt = pm.response.json();",
							"for(var i=0;i<rt.data.length;i++){",
							"    map.set(rt.data[i].name, rt.data[i].id);",
							"}",
							"",
							"",
							"//console.log(map);",
							"var rt_name = pm.iterationData.get(\"rt_name\");",
							"//console.log(rt_name);",
							"if(!map.has(rt_name)){",
							"//    console.log(\"request template name is not existed.(\"+rt_name+\")\");",
							"    ",
							"    pm.sendRequest({",
							"        url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/core-resources/workflow/process-definition-keys\" ,",
							"        method: 'GET',",
							"        header: {",
							"            'Accept': 'application/json',",
							"            'Content-Type': 'application/json;charset=UTF-8',",
							"            'authorization': pm.environment.get(\"authorization\"),",
							"        }",
							"    }, function (err, res) {",
							"        var procKey;",
							"        var rt = res.json();",
							"        for(var i=0;i<rt.data.length;i++){",
							"            if(rt.data[i].procDefName == '审批流程'){",
							"                procKey = rt.data[i].procDefKey;",
							"            }",
							"        }",
							"        ",
							"        if(procKey !== undefined){",
							"    //create service request template",
							"            pm.sendRequest({",
							"                url: \"http://\"+ pm.environment.get(\"domain\") + \"/service-mgmt/v1/service-request-templates\" ,",
							"                method: 'POST',",
							"                ",
							"                body:{",
							"                    mode: 'raw',",
							"                    raw: JSON.stringify(",
							"                        {\"name\":pm.iterationData.get(\"rt_name\"),\"description\":pm.iterationData.get(\"rt_desc\"),\"servicePipelineId\":pm.collectionVariables.get(\"sm_service_pipeline_id\"),\"procDefKey\":procKey})",
							"                },",
							"                header: {",
							"                    'Accept': 'application/json',",
							"                    'Content-Type': 'application/json;charset=UTF-8',",
							"                    'authorization': pm.environment.get(\"authorization\"),",
							"                }",
							"            }, function (err, res) {",
							"       ",
							"            });",
							"    }        ",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "accept-language",
						"value": "en,zh-CN;q=0.9,zh;q=0.8"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTU4MjcwODc1MCwidHlwZSI6ImFjY2Vzc1Rva2VuIiwiY2xpZW50VHlwZSI6IlVTRVIiLCJleHAiOjE1ODI3MDkzNTAsImF1dGhvcml0eSI6IltTVVBFUl9BRE1JTixJTVBMRU1FTlRBVElPTl9XT1JLRkxPV19FWEVDVVRJT04sSU1QTEVNRU5UQVRJT05fQkFUQ0hfRVhFQ1VUSU9OLElNUExFTUVOVEFUSU9OX0FSVElGQUNUX01BTkFHRU1FTlQsTU9OSVRPUl9NQUlOX0RBU0hCT0FSRCxNT05JVE9SX01FVFJJQ19DT05GSUcsTU9OSVRPUl9DVVNUT01fREFTSEJPQVJELE1PTklUT1JfQUxBUk1fQ09ORklHLE1PTklUT1JfQUxBUk1fTUFOQUdFTUVOVCxDT0xMQUJPUkFUSU9OX1BMVUdJTl9NQU5BR0VNRU5ULENPTExBQk9SQVRJT05fV09SS0ZMT1dfT1JDSEVTVFJBVElPTixBRE1JTl9TWVNURU1fUEFSQU1TLEFETUlOX1JFU09VUkNFU19NQU5BR0VNRU5ULEFETUlOX1VTRVJfUk9MRV9NQU5BR0VNRU5ULEFETUlOX0NNREJfTU9ERUxfTUFOQUdFTUVOVCxDTURCX0FETUlOX0JBU0VfREFUQV9NQU5BR0VNRU5ULEFETUlOX1FVRVJZX0xPRyxNRU5VX0FETUlOX1BFUk1JU1NJT05fTUFOQUdFTUVOVCxNRU5VX0RFU0lHTklOR19DSV9EQVRBX0VOUVVJUlksTUVOVV9ERVNJR05JTkdfQ0lfSU5URUdSQVRFRF9RVUVSWV9FWEVDVVRJT04sTUVOVV9JRENfUExBTk5JTkdfREVTSUdOLE1FTlVfREVTSUdOSU5HX0NJX0lOVEVHUkFURURfUVVFUllfTUFOQUdFTUVOVCxNRU5VX0RFU0lHTklOR19DSV9EQVRBX01BTkFHRU1FTlQsTUVOVV9BUFBMSUNBVElPTl9BUkNISVRFQ1RVUkVfREVTSUdOLE1FTlVfQVBQTElDQVRJT05fREVQTE9ZTUVOVF9ERVNJR04sTUVOVV9DTURCX0RFU0lHTklOR19FTlVNX01BTkFHRU1FTlQsTUVOVV9DTURCX0FETUlOX0JBU0VfREFUQV9NQU5BR0VNRU5ULE1FTlVfQ01EQl9ERVNJR05JTkdfRU5VTV9FTlFVSVJZLE1FTlVfQURNSU5fQ01EQl9NT0RFTF9NQU5BR0VNRU5ULE1FTlVfQURNSU5fUVVFUllfTE9HLE1FTlVfSURDX1JFU09VUkNFX1BMQU5OSU5HLEpPQlNfVEFTS19NQU5BR0VNRU5ULEpPQlNfU0VSVklDRV9DQVRBTE9HX01BTkFHRU1FTlRdIn0.BK6pXaHzs6vNwI85KEH84GKzMxaZcAr7M4uGVDTO4R1fjnYCsB4W1WK766LXM1U1xWBgOQs4Z3WpHWphqib7_w"
					},
					{
						"key": "cookie",
						"value": "JSESSIONID=1C3C48E7D67CE86536051D3CB037BDFB; DokuWiki=5d2b2ea77997ce7cee2a7765004242aa; DW68700bfd16c2027de7de74a5a8202a6f=Z3JheQ%3D%3D%7C1%7Csu%2F1dHAKO8iuiDLvyEESlg8lAO3SfH8CXKDut%2B3yZ64%3D"
					},
					{
						"key": "host",
						"value": "120.79.2.48:29090"
					},
					{
						"key": "proxy-connection",
						"value": "keep-alive"
					},
					{
						"key": "referer",
						"value": "http://120.79.2.48:29090/"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36"
					}
				],
				"url": {
					"raw": "http://{{domain}}/service-mgmt/v1/service-request-templates/service-pipelines/{{sm_service_pipeline_id}}",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"service-mgmt",
						"v1",
						"service-request-templates",
						"service-pipelines",
						"{{sm_service_pipeline_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "63b35faf-7fa8-475b-9326-eeaeae5931ac",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "173443d0-c533-43e3-83bc-09da47f0bd62",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c02f35cf-2caf-4a8a-a64a-2fcd046330d3",
			"key": "sm_servie_catalogue_id",
			"value": "2c918084707fc26001708b380fd00033",
			"type": "string"
		},
		{
			"id": "9a1566b9-8992-4675-bbc1-a8f35f0683af",
			"key": "sm_proc_key",
			"value": "",
			"type": "string"
		},
		{
			"id": "80759260-8b63-404d-b4c1-055d7fa210ce",
			"key": "sm_service_pipeline_id",
			"value": "2c918084707fc26001708b3811ba0034",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}